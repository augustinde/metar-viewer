name: Generated APK AAB (Upload - Create Artifact To Github Action)

env:
  main_project_module: app
  playstore_name: MetarViewer

on:
  workflow_dispatch:
    inputs:
      release_tag_name:
        description: "Tag name for the release"
        default: "vX.0"
        required: true
      release_name:
        description: "Name of the release"
        default: "Release X.0"
        required: true
      release_body:
        description: "Release notes"
        required: true
        default: "Release notes for vX.0"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Create file google-services.json
        run: cat /home/runner/work/metar-viewer/metar-viewer/app/google-services.json | base64

      - name: Putting data google-services.json
        env:
          DATA: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $DATA > /home/runner/work/metar-viewer/metar-viewer/app/google-services.json

      - name: Create file local.properties
        run: cat /home/runner/work/metar-viewer/metar-viewer/app/local.properties | base64

      - name: Putting data local.properties
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
        run: |
          echo "MAPS_API_KEY=$MAPS_API_KEY" > ./local.properties
          echo "WEATHER_API_KEY=$WEATHER_API_KEY" >> ./local.properties

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: ./gradlew ${{ env.main_project_module }}:bundleRelease

      # Upload Artifact Build
      # Noted For Output [main_project_module]/build/outputs/bundle/release/
      - name: Upload AAB (App Bundle) Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - App bundle(s) AAB release generated
          path: ${{ env.main_project_module }}/build/outputs/bundle/release/

      - name: Get release file aab path
        id: releaseAab
        run: echo "aabFile=$(find app/build/outputs/bundle/release/*.aab)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ steps.releaseAab.outputs.aabFile }}
          tag_name: ${{ github.event.inputs.release_tag_name }}
          release_name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.release_body }}
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}